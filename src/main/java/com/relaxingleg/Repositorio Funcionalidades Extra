## DAR un mensaje de OnReady Bot ##

@Override
    public void onReady(@NotNull ReadyEvent event) {

            JDA jda =event.getJDA();
            for (Guild guild : jda.getGuilds()) {

                for(TextChannel channel : guild.getTextChannels()) {

                    channel.sendMessage("Prueba 2 antes de commit and push").queue();;
                }

        }

    }


## DAR RESPUESTA DE LO MISMO DETECTADO EN LA ULTIMA LINEA ##

@Override
    public void onMessageReceived(@NotNull MessageReceivedEvent event) {
        if (event.getAuthor().isBot()) return;  //Evitamos que el bot se auto responda
        MessageChannel channel = event.getChannel();
        channel.sendMessage(event.getMessage().getContentRaw()).queue();


    }


    ## SLASH COMMANDS ##

    Como subar dos numeros a partir de un comnado

    @Override
        public void onReady(@NotNull  ReadyEvent event) {
            Guild guild = event.getJDA().getGuildById(1282507250539171840L);
            guild.upsertCommand("sum","gives the sum of two numbers").queue();


        }








    }




 @Override
     public void execute(SlashCommandInteractionEvent event) {
         Member member = event.getMember();
         assert member != null;
         GuildVoiceState memberVoiceState = member.getVoiceState();

         if(!memberVoiceState.inAudioChannel()){
             event.reply("Tienes que estar dentro de un canal de Voz").queue();
             return;
         }

         Member self = event.getGuild().getSelfMember();
         GuildVoiceState selfVoiceState = self.getVoiceState();

         if(!selfVoiceState.inAudioChannel()){
             event.getGuild().getAudioManager().openAudioConnection(memberVoiceState.getChannel());

         }else {

             if(selfVoiceState.getChannel() != memberVoiceState.getChannel()){
                 event.reply("Debes estar en el mismo canal").queue();
                 return;


             }
         }

         PlayerManager playerManager = PlayerManager.get();
         PlayerManager.play(event.getGuild(), event.getOption("name").getAsString());


     }









     System.out.println("Seleccione la moneda que desea consultar:");
             System.out.println("1. Dólar");
             System.out.println("2. Euro");
             System.out.println("3. Real");


             int moneda = scanner.nextInt();
             String endpoint = "";

             switch (moneda) {
                 case 1:

                     System.out.println("Seleccione el tipo de cotización del Dólar:");
                     System.out.println("1. Dólar Blue");
                     System.out.println("2. Dólar Oficial");
                     System.out.println("3. Dólar Bolsa");
                     int tipoDolar = scanner.nextInt();

                     switch (tipoDolar) {
                         case 1:
                             endpoint = "v1/dolares/blue";
                             break;
                         case 2:
                             endpoint = "v1/dolares/oficial";
                             break;
                         case 3:
                             endpoint = "v1/dolares/bolsa";
                             break;
                         default:
                             System.out.println("Opción no válida para el tipo de Dólar.");
                             return;
                     }
                     break;

                 case 2:
                     // Cotización del Euro
                     endpoint = "v1/cotizaciones/eur";
                     break;

                 case 3:
                     // Cotización del Real
                     endpoint = "v1/cotizaciones/brl";
                     break;

                 default:
                     System.out.println("Opción no válida.");
                     return;
             }


             try {
                 String respuesta = get(endpoint);
                 System.out.println("Respuesta para el endpoint seleccionado: " + respuesta);
             } catch (RuntimeException e) {
                 System.err.println(e.getMessage());
             }
         }